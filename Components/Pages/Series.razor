@page "/{SeriesName}/{Year}"
@using NascarCalendar.Services
@using Models = NascarCalendar.Models
@using NascarCalendar.Components.Shared
@inject ICalendarService CalendarService
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Series</PageTitle>

<h1>NASCAR Schedule @Year</h1>

<SeriesPicker SeriesName=@SeriesName Year=@Year/>

<YearPicker SeriesName=@SeriesName Year=@Year/>

@if (error != "")
{
    <ErrorMessage Message=@error/>
}

@if (races == null)
{
    <p></p>
}
else
{
    <div>
    @foreach (var race in races.Select((value, index) => new { index, value }))
    {
        <Race Series="@SeriesName" RaceIndex=@race.index/>
    }
    </div>
}


@code {
    [Parameter, EditorRequired]
    public string SeriesName { get; set; }

    [Parameter, EditorRequired]
    public string Year { get; set; }

    private string error = "";
    private List<Models.Race> races = null;

    //TODO: error handling for incorrect url parameters

    protected override async Task OnInitializedAsync()
    {
        try {
            await CalendarService.GetCalendar(Year);

            races = CalendarService.GetSeries(SeriesName);
        } catch (Exception e) {
            error = e.Message;
        }
    }
}
